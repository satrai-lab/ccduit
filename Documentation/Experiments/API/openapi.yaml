openapi: 3.0.0
info:
  title: CCduit API
  version: 0.0.3
  description: API for managing interactions between IoT federations using CCduit.
servers:
  - url: http://{Server Adress}:{port}/
    variables:
      Server Adress:
        default: localhost
        description: Location of CCduit node
      port:
        default: '5000'
paths:
  /register_data_model:
    post:
      tags:
        - Data Model
      summary: Register a new data model
      requestBody:
        description: Data Model to register
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataModel_Id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                model_Format:
                  type: string
                specific_Ontology:
                  type: string
                ontology_Version:
                  type: string
                ontology_URL:
                  type: string
                associated_Communities:
                  type: array
                  items:
                    type: string
                dataSharing_Policy:
                  type: string
              required:
                - dataModel_Id
                - name
                - description
                - model_Format
                - specific_Ontology
                - ontology_Version
                - ontology_URL
                - associated_Communities
                - dataSharing_Policy
      responses:
        '200':
          description: Data Model registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /update_data_model:
    put:
      tags:
        - Data Model
      summary: Update an existing data model
      requestBody:
        description: Data to update for the data model
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataModel_Id:
                  type: string
                new_Description:
                  type: string
                new_Model_Format:
                  type: string
                new_Specific_Ontology:
                  type: string
                new_Ontology_Version:
                  type: string
                new_Ontology_URL:
                  type: string
                new_Associated_Communities:
                  type: array
                  items:
                    type: string
                new_DataSharing_Policy:
                  type: string
              required:
                - dataModel_Id
                - new_Description
                - new_Model_Format
                - new_Specific_Ontology
                - new_Ontology_Version
                - new_Ontology_URL
                - new_Associated_Communities
                - new_DataSharing_Policy
      responses:
        '200':
          description: Data Model updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /remove_data_model/{data_Model_Id}:
    delete:
      tags:
        - Data Model
      summary: Remove a data model
      parameters:
        - name: data_Model_Id
          in: path
          description: ID of the data model to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data Model removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /query_data_model/{data_model_id}:
    get:
      tags:
        - Data Model
      summary: Query a data model by ID
      parameters:
        - name: data_model_id
          in: path
          description: ID of the data model to query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data Model found
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataModel_Id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  model_Format:
                    type: string
                  specific_Ontology:
                    type: string
                  ontology_Version:
                    type: string
                  ontology_URL:
                    type: string
                  associated_Communities:
                    type: array
                    items:
                      type: string
                  dataSharing_Policy:
                    type: string
        '404':
          description: No Data Model found for the provided ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /list_data_models:
    get:
      tags:
        - Data Model
      summary: List all data models
      responses:
        '200':
          description: List of data models
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    dataModel_Id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    model_Format:
                      type: string
                    specific_Ontology:
                      type: string
                    ontology_Version:
                      type: string
                    ontology_URL:
                      type: string
                    associated_Communities:
                      type: array
                      items:
                        type: string
                    dataSharing_Policy:
                      type: string
  /register_community:
    post:
      tags:
        - Community
      summary: Register a new community
      requestBody:
        description: Community data to register
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_Id:
                  type: string
                name:
                  type: string
                connection_Details:
                  type: string
                origin:
                  type: string
                role_In_Federation:
                  type: string
                geographical_Location:
                  type: string
                has_Data_Models:
                  type: array
                  items:
                    type: string
                part_Of_Federation:
                  type: string
                last_Updated:
                  type: string
              required:
                - community_Id
                - name
                - connection_Details
                - origin
                - role_In_Federation
                - geographical_Location
                - has_Data_Models
                - part_Of_Federation
                - last_Updated
      responses:
        '201':
          description: Community registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /update_community/{community_Id}:
    put:
      tags:
        - Community
      summary: Update an existing community
      parameters:
        - name: community_Id
          in: path
          description: ID of the community to update
          required: true
          schema:
            type: string
      requestBody:
        description: Data to update for the community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_Data_Models:
                  type: array
                  items:
                    type: string
                new_Last_Updated:
                  type: string
              required:
                - new_Data_Models
                - new_Last_Updated
      responses:
        '200':
          description: Community updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /remove_community/{community_Id}:
    delete:
      tags:
        - Community
      summary: Remove a community
      parameters:
        - name: community_Id
          in: path
          description: ID of the community to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Community removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /query_community/{community_Id}:
    get:
      tags:
        - Community
      summary: Query a community by ID
      parameters:
        - name: community_Id
          in: path
          description: ID of the community to query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Community found
          content:
            application/json:
              schema:
                type: object
                properties:
                  community_Id:
                    type: string
                  name:
                    type: string
                  connection_Details:
                    type: string
                  origin:
                    type: string
                  role_In_Federation:
                    type: string
                  geographical_Location:
                    type: string
                  has_Data_Models:
                    type: array
                    items:
                      type: string
                  part_Of_Federation:
                    type: string
                  last_Updated:
                    type: string
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /list_communities:
    get:
      tags:
        - Community
      summary: List all communities
      parameters:
        - name: federation_id
          in: query
          description: ID of the federation to filter communities
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of communities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    community_Id:
                      type: string
                    name:
                      type: string
                    connection_Details:
                      type: string
                    origin:
                      type: string
                    role_In_Federation:
                      type: string
                    geographical_Location:
                      type: string
                    has_Data_Models:
                      type: array
                      items:
                        type: string
                    part_Of_Federation:
                      type: string
                    last_Updated:
                      type: string
  /register_federation:
      post:
        tags:
        - Federation
        summary: Register Federation
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  federationId:
                    type: string
                  name:
                    type: string
                  topology:
                    type: string
                  structure:
                    type: string
                  areaCovered:
                    type: string
                  number_Of_Nodes:
                    type: string
                  part_Of_Federation:
                    type: string
                  includes_Communities:
                    type: string
                  uses_Interactions:
                    type: string
                  data_Sharing_Policy:
                    type: string
        responses:
          201:
            description: Federation registered successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string                      
  /update_federation/{federation_Id}:
      put:
        tags:
        - Federation
        summary: Update Federation
        parameters:
          - in: path
            name: federation_Id
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_Topology:
                    type: string
                  new_Structure:
                    type: string
                  new_Number_Of_Nodes:
                    type: integer
                  new_IncludesCommunities:
                    type: boolean
                  new_Uses_Connections:
                    type: boolean
                  new_Data_Sharing_Policy:
                    type: string
        responses:
          200:
            description: Federation updated successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

  /remove_federation/{federation_Id}:
    delete:
      tags:
        - Federation
      summary: Remove Federation
      parameters:
        - in: path
          name: federation_Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Federation removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /query_federation/{federation_Id}:
    get:
      tags:
        - Federation
      summary: Query Federation
      parameters:
        - in: path
          name: federation_Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Federation found
          content:
            application/json:
              schema:
                type: object
        404:
          description: Federation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /list_federations:
    get:
      tags:
        - Federation
      summary: List all Federations
      responses:
        200:
          description: List of Federations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /create_interaction:
    post:
      tags:
        - Interaction
      summary: Create Interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                initiated_By:
                  type: string
                from_community:
                  type: string
                towards:
                  type: string
                interaction_Type:
                  type: string
                interaction_Status:
                  type: string
                source_data_model:
                  type: string
                target_data_model:
                  type: string
                source_path:
                  type: string
                dest_path:
                  type: string
      responses:
        200:
          description: Interaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /query_interaction/{interaction_id}:
      get:
        tags:
        - Interaction
        summary: Query Interaction
        parameters:
          - in: path
            name: interaction_id
            required: true
            schema:
              type: string
        responses:
          200:
            description: Interaction details
            content:
              application/json:
                schema:
                  type: object

  /validate_interaction/{interaction_id}:
    get:
      tags:
        - Interaction
      summary: Validate Interaction
      parameters:
        - in: path
          name: interaction_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Validation result for interaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  validation:
                    type: string

  /monitor_interaction/{interaction_id}:
    get:
      tags:
        - Interaction
      summary: Monitor Interaction
      parameters:
        - in: path
          name: interaction_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Monitoring data for interaction
          content:
            application/json:
              schema:
                type: object

  /pause_interaction/{interaction_id}:
    put:
      tags:
        - Interaction
      summary: Pause Interaction
      parameters:
        - in: path
          name: interaction_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Interaction paused successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /resume_interaction/{interaction_id}:
    put:
      tags:
        - Interaction
      summary: Resume Interaction
      parameters:
        - in: path
          name: interaction_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Interaction resumed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /list_interactions:
    get:
      tags:
        - Interaction
      summary: List all Interactions
      responses:
        200:
          description: List of Interactions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /remove_interaction/{interaction_Id}:
    delete:
      tags:
        - Interaction
      summary: Remove Interaction
      parameters:
        - in: path
          name: interaction_Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Interaction removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string     
  /save_mapping:
    post:
      tags:
        - Mapping
      summary: Save a new mapping
      description: Save the mapping between a source model and a destination model using a specified converter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - source_model
                - dest_model
                - converter_name
              properties:
                source_model:
                  type: string
                  description: The name of the source data model.
                dest_model:
                  type: string
                  description: The name of the destination data model.
                converter_name:
                  type: string
                  description: The name of the converter to use for the mapping.
      responses:
        200:
          description: Mapping saved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message.
        400:
          description: An error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error that occurred.      
                    
  /register_converter:
      post:
        tags:
        - Converter
        summary: Register a new converter function
        requestBody:
          description: Converter function details
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - function
                properties:
                  name:
                    type: string
                    description: Unique name for the converter function
                  function:
                    type: string
                    description: String representation of the converter function
        responses:
          201:
            description: Converter function registered successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          400:
            description: Bad request, missing or invalid data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          409:
            description: Conflict, converter with this name already exists
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string         
  /remove_converter/{converter_name}:
      delete:
        tags:
        - Converter
        summary: Remove a converter
        description: Deletes a converter based on its name.
        parameters:
          - in: path
            name: converter_name
            type: string
            required: true
            description: The name of the converter to be removed.
        responses:
          200:
            description: Converter removed successfully.
            schema:
              type: object
              properties:
                message:
                  type: string
          404:
            description: Converter not found.
            schema:
              type: object
              properties:
                error:
                  type: string
  /list_converters:
      get:
        tags:
        - Converter
        summary: List all converters
        description: Retrieves a list of all registered converters.
        responses:
          200:
            description: A list of converters.
            schema:
              type: object
              properties:
                converters:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      function:
                        type: string
          500:
            description: Internal server error.
            schema:
              type: object
              properties:
                error:
                  type: string
                  
